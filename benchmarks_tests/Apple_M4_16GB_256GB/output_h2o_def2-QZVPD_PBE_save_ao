Cupy is not installed. GPU acceleration is not availble.
Operating System: Darwin 24.3.0
System Type: 64bit
CPU Model: Apple M4
Number of Cores: 10
Number of Threads: 10
Memory (GB): 16.0
Number of cores being actually used/requested for the benchmark: 1
Confirming that the environment variables are properly set...
OMP_NUM_THREADS = 1
OPENBLAS_NUM_THREADS = 1
MKL_NUM_THREADS = 1
VECLIB_MAXIMUM_THREADS = 1
NUMEXPR_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 25000
#INFO: **** input file is /Users/manas/Documents/PyFock/benchmarks_tests/benchmark_DFT_LDA_DF.py ****
####### NOTE: The scipy.linalg library appears to be using double the number of threads supplied for some reason.
####### To avoid such issues messing up the benchmarks, the benchmark should be run as 'taskset --cpu-list 0-3 python3 benchmark_DFT_LDA_DF.py'
####### This way one can set the number of CPUs seen by the python process and the benchmark would be much more reliable.
####### Furthermore, to confirm the CPU and memory usage throughout the whole process, one can profilie it using  
####### psrecord 13447 --interval 1 --duration 120 --plot 13447.png
#######
####### This may be required in some cases when using GPU on WSL
####### export NUMBA_CUDA_DRIVER="/usr/lib/wsl/lib/libcuda.so.1"

import os
import platform
import psutil
import numba
#numba.config.THREADING_LAYER='tbb'
# Set the number of threads/cores to be used by PyFock and PySCF
ncores = 1
os.environ['OMP_NUM_THREADS'] = str(ncores)
os.environ["OPENBLAS_NUM_THREADS"] = str(ncores) # export OPENBLAS_NUM_THREADS=4 
os.environ["MKL_NUM_THREADS"] = str(ncores) # export MKL_NUM_THREADS=4
os.environ["VECLIB_MAXIMUM_THREADS"] = str(ncores) # export VECLIB_MAXIMUM_THREADS=4
# os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=4
os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=1
# Set the max memory for PySCF
os.environ["PYSCF_MAX_MEMORY"] = str(25000) 

# Print system information 
from pyfock import Utils

Utils.print_sys_info()

# Check if the environment variables are properly set
print("Number of cores being actually used/requested for the benchmark:", ncores)
print('Confirming that the environment variables are properly set...')
print('OMP_NUM_THREADS =', os.environ.get('OMP_NUM_THREADS', None))
print('OPENBLAS_NUM_THREADS =', os.environ.get('OPENBLAS_NUM_THREADS', None))
print('MKL_NUM_THREADS =', os.environ.get('MKL_NUM_THREADS', None))
print('VECLIB_MAXIMUM_THREADS =', os.environ.get('VECLIB_MAXIMUM_THREADS', None))
print('NUMEXPR_NUM_THREADS =', os.environ.get('NUMEXPR_NUM_THREADS', None))
print('PYSCF_MAX_MEMORY =', os.environ.get('PYSCF_MAX_MEMORY', None))


# Run your tasks here
from pyfock import Basis
from pyfock import Mol
from pyfock import Integrals
from pyfock import DFT
from timeit import default_timer as timer
import numpy as np
import scipy

from pyscf import gto, dft, df, scf

#DFT SCF benchmark and comparison with PySCF
#Benchmarking and performance assessment and comparison using various techniques and different softwares

# LDA_X LDA_C_VWN 
# funcx = 1
# funcc = 7

# LDA_X LDA_C_PW 
# funcx = 1
# funcc = 12

# LDA_X LDA_C_PW_MOD 
# funcx = 1
# funcc = 13

# GGA_X_PBE, GGA_C_PBE (PBE)
funcx = 101
funcc = 130

# GGA_X_B88, GGA_C_LYP (BLYP)
# funcx = 106
# funcc = 131

funcidcrysx = [funcx, funcc]
funcidpyscf = str(funcx)+','+str(funcc)

# basis_set_name = 'sto-2g'
# basis_set_name = 'sto-3g'
# basis_set_name = 'sto-6g'
# basis_set_name = '6-31G'
# basis_set_name = 'def2-SVP'
# basis_set_name = 'def2-SVPD'
# basis_set_name = 'def2-TZVP'
# basis_set_name = 'def2-QZVP'
# basis_set_name = 'def2-TZVPP'
# basis_set_name = 'def2-QZVPP'
# basis_set_name = 'def2-TZVPD'
basis_set_name = 'def2-QZVPD'
# basis_set_name = 'def2-TZVPPD'
# basis_set_name = 'def2-QZVPPD'
# basis_set_name = 'cc-pVDZ'
# basis_set_name = 'ano-rcc'

auxbasis_name = 'def2-universal-jfit'
# auxbasis_name = 'def2-universal-jkfit'
# auxbasis_name = 'def2-TZVP'
# auxbasis_name = 'sto-3g'
# auxbasis_name = 'def2-SVP'
# auxbasis_name = '6-31G'

# xyzFilename = 'Benzene-Fulvene_Dimer.xyz'
# xyzFilename = 'Adenine-Thymine.xyz'
# xyzFilename = 'Zn.xyz'
# xyzFilename = 'Zn_dimer.xyz'
# xyzFilename = 'TPP.xyz'
# xyzFilename = 'Zn_TPP.xyz'
xyzFilename = 'H2O.xyz'

# xyzFilename = 'Caffeine.xyz'
# xyzFilename = 'Serotonin.xyz'
# xyzFilename = 'Cholesterol.xyz'
# xyzFilename = 'C60.xyz'
# xyzFilename = 'Taxol.xyz'
# xyzFilename = 'Valinomycin.xyz'
# xyzFilename = 'Olestra.xyz'
# xyzFilename = 'Ubiquitin.xyz'

### 1D Carbon Alkanes
# xyzFilename = 'Ethane.xyz'
# xyzFilename = 'Decane_C10H22.xyz'
# xyzFilename = 'Icosane_C20H42.xyz'
# xyzFilename = 'Tetracontane_C40H82.xyz'
# xyzFilename = 'Pentacontane_C50H102.xyz'
# xyzFilename = 'Octacontane_C80H162.xyz'
# xyzFilename = 'Hectane_C100H202.xyz'
# xyzFilename = 'Icosahectane_C120H242.xyz'

### 2D Carbon
# xyzFilename = 'Graphene_C16.xyz'
# xyzFilename = 'Graphene_C76.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'

### 3d Carbon Fullerenes
# xyzFilename = 'C60.xyz'
# xyzFilename = 'C70.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'


# ---------PySCF---------------
#Comparison with PySCF
molPySCF = gto.Mole()
molPySCF.atom = xyzFilename
molPySCF.basis = basis_set_name
molPySCF.cart = True
molPySCF.verbose = 4
molPySCF.max_memory=5000
# molPySCF.incore_anyway = True # Keeps the PySCF ERI integrals incore
molPySCF.build()
#print(molPySCF.cart_labels())

print('\n\nPySCF Results\n\n')
start=timer()
mf = dft.rks.RKS(molPySCF).density_fit(auxbasis=auxbasis_name)
# mf = scf.RHF(molPySCF).density_fit(auxbasis=auxbasis_name)
mf.xc = funcidpyscf
# mf.verbose = 4
mf.direct_scf = False
# mf.with_df.max_memory = 25000
# dmat_init = mf.init_guess_by_1e(molPySCF)
# dmat_init = mf.init_guess_by_huckel(molPySCF)
mf.init_guess = 'minao'
dmat_init = mf.init_guess_by_minao(molPySCF)
# mf.init_guess = 'atom'
# dmat_init = mf.init_guess_by_atom(molPySCF)
mf.max_cycle = 30
mf.conv_tol = 1e-7
mf.grids.level = 3
# print('begin df build')
# start_df_pyscf=timer()
# mf.with_df.build()
# duration_df_pyscf = timer()- start_df_pyscf
# print('PySCF df time: ', duration_df_pyscf)
# print('end df build')
energyPyscf = mf.kernel(dm0=dmat_init)
print('Nuc-Nuc PySCF= ', molPySCF.energy_nuc())
print('One electron integrals energy',mf.scf_summary['e1'])
print('Coulomb energy ',mf.scf_summary['coul'])
print('EXC ',mf.scf_summary['exc'])
duration = timer()-start
print('PySCF time: ', duration)
pyscfGrids = mf.grids
print('PySCF Grid Size: ', pyscfGrids.weights.shape)
print('\n\n PySCF Dipole moment')
dmat = mf.make_rdm1()
mol_dip_pyscf = mf.dip_moment(molPySCF, dmat, unit='AU')
mf = 0#None
import psutil

# Get memory information
memory_info = psutil.virtual_memory()

# Convert bytes to human-readable format
used_memory = psutil._common.bytes2human(memory_info.used)


# If you want to print in a more human-readable format, you can use psutil's utility function
print(f"Currently Used memory: {used_memory}")
#--------------------CrysX --------------------------

#Initialize a Mol object with somewhat large geometry
molCrysX = Mol(coordfile=xyzFilename)
print('\n\nNatoms :',molCrysX.natoms)
# print(molCrysX.coordsBohrs)

#Initialize a Basis object with a very large basis set
basis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=basis_set_name)})
print('\n\nNAO :',basis.bfs_nao)

auxbasis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=auxbasis_name)})
print('\n\naux NAO :',auxbasis.bfs_nao)

dftObj = DFT(molCrysX, basis, xc=funcidcrysx)
# GPU acceleration
dftObj.use_gpu = False
dftObj.keep_ao_in_gpu = False
dftObj.use_libxc = False
dftObj.n_streams = 1 # Changing this to anything other than 1 won't make any difference 
dftObj.n_gpus = 1 # Specify the number of GPUs
dftObj.free_gpu_mem = True
dftObj.threads_x = 32
dftObj.threads_y = 32
dftObj.dynamic_precision = False
dftObj.keep_ints3c2e_in_gpu = True
# SAO or CAO basis
dftObj.sao = False
# print(dmat_init)
# Using PySCF grids to compare the energies
energyCrysX, dmat = dftObj.scf(max_itr=35, ncores=ncores, dmat=dmat_init, conv_crit=1.0E-7, grids=pyscfGrids, \
                               isDF=True, auxbasis=auxbasis, rys=True, DF_algo=10, blocksize=5000, XC_algo=2, debug=False, \
                                sortGrids=False, save_ao_values=True, xc_bf_screen=True, threshold_schwarz=1e-9, \
                                strict_schwarz=True, cholesky=True, orthogonalize=True)
# print(dmat)

# Using CrysX grids 
# To get the same energies as PySCF (level=5) upto 1e-7 au, use the following settings
# radial_precision=1.0e-13
# level=3
# pruning by density with threshold = 1e-011
# alpha_min and alpha_max corresponding to QZVP
# energyCrysX, dmat = dftObj.scf(max_itr=30, ncores=ncores, dmat=dmat_init, grids=None, gridsLevel=3, isDF=True, auxbasis=auxbasis,
#                             rys=True, DF_algo=6, blocksize=5000, XC_algo=2, debug=False, sortGrids=False, save_ao_values=True,
#                             xc_bf_screen=True,threshold_schwarz=1e-9)


print('Energy diff (PySCF-CrysX)', abs(energyCrysX-energyPyscf))

print('\n\nPyFock Dipole moment')
M = Integrals.dipole_moment_mat_symm(basis)
mol_dip = molCrysX.get_dipole_moment(M, dmat)
print('Dipole moment(X, Y, Z, A.U.):', *mol_dip)
print('Max Diff dipole moment (PySCF-CrysX)', abs(mol_dip_pyscf-mol_dip).max())

#Print package versions
import joblib
import scipy
import numba
import threadpoolctl
import opt_einsum
import pylibxc
import llvmlite 
import cupy
import numexpr
import pyscf
print('\n\n\n Package versions')
print('pyscf version', pyscf.__version__)
# print('psi4 version', psi4.__version__)
print('np version', np.__version__)
print('joblib version', joblib.__version__)
print('numba version', numba.__version__)
print('threadpoolctl version', threadpoolctl.__version__)
print('opt_einsum version', opt_einsum.__version__)
# print('pylibxc version', pylibxc.__version__)
print('llvmlite version', llvmlite.__version__)
print('cupy version', cupy.__version__)
print('numexpr version', numexpr.__version__)
print('scipy version', scipy.__version__)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Manass-MacBook-Air.local', release='24.3.0', version='Darwin Kernel Version 24.3.0: Thu Jan  2 20:31:46 PST 2025; root:xnu-11215.81.4~4/RELEASE_ARM64_T8132', machine='arm64')  Threads 1
Python 3.9.6 (default, Mar 12 2025, 20:22:46) 
[Clang 17.0.0 (clang-1700.0.13.3)]
numpy 1.26.4  scipy 1.10.1  h5py 3.13.0
Date: Mon May 19 20:08:16 2025
PySCF version 2.9.0
PySCF path  /Users/manas/Library/Python/3.9/lib/python/site-packages/pyscf

[ENV] PYSCF_MAX_MEMORY 25000
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Cartesian GTO integrals (6d 10f)
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 O      1.531750110275   0.005922000426  -0.120880008702 AA    2.894588199692   0.011190958915  -0.228430110383 Bohr   0.0
[INPUT]  2 H      0.575968041466  -0.005249000378   0.024966001797 AA    1.088421854872  -0.009919173142   0.047178905822 Bohr   0.0
[INPUT]  3 H      1.906249137236  -0.037561002704   0.763218054946 AA    3.602288794565  -0.070980008075   1.442273097172 Bohr   0.0

nuclear repulsion = 9.13066687519452
number of shells = 42
number of NR pGTOs = 184
number of NR cGTOs = 158
basis = def2-QZVPD
ecp = {}
CPU time:         2.96


PySCF Results


Initial guess from minao.


******** <class 'pyscf.df.df_jk.DFRKS'> ********
method = DFRKS
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 30
direct_scf = False
chkfile to save SCF result = /var/folders/2v/15wx3xrs0tj4bz4kdgj4gfwh0000gn/T/tmp8aeormtz
max_memory 5000 MB (current use 0 MB)
XC library pyscf.dft.libxc version 7.0.0
    S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques.,  SoftwareX 7, 1–5 (2018)
XC functionals = 101,130
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x157d3d940>
grids dens level: 3
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x157c6d1f0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 33704
init E= -76.3312732685853
  HOMO = -0.402239244151216  LUMO = -0.0410940685847864
cycle= 1 E= -76.2771345068105  delta_E= 0.0541  |g|= 0.792  |ddm|= 0.937
  HOMO = -0.0848025350914553  LUMO = 0.00230925523960006
cycle= 2 E= -75.7552837339263  delta_E= 0.522  |g|= 1.79  |ddm|= 0.86
  HOMO = -0.289175646877864  LUMO = -0.0329495598242984
cycle= 3 E= -76.3870395881633  delta_E= -0.632  |g|= 0.0669  |ddm|= 0.611
  HOMO = -0.263908944127655  LUMO = -0.0261193810536429
cycle= 4 E= -76.3880823358994  delta_E= -0.00104  |g|= 0.0139  |ddm|= 0.0449
  HOMO = -0.265503157951443  LUMO = -0.0273620453269586
cycle= 5 E= -76.3881116521531  delta_E= -2.93e-05  |g|= 0.00333  |ddm|= 0.00634
  HOMO = -0.265967811113391  LUMO = -0.0275056496563138
cycle= 6 E= -76.3881137913764  delta_E= -2.14e-06  |g|= 8.99e-05  |ddm|= 0.00177
  HOMO = -0.265982494826885  LUMO = -0.0275170858842739
cycle= 7 E= -76.3881137923624  delta_E= -9.86e-10  |g|= 7.29e-06  |ddm|= 8.5e-05
  HOMO = -0.265984467434944  LUMO = -0.0275175691415474
Extra cycle  E= -76.3881137923466  delta_E= 1.58e-11  |g|= 1.19e-05  |ddm|= 1e-05
converged SCF energy = -76.3881137923466
Nuc-Nuc PySCF=  9.130666875194525
One electron integrals energy -122.8894072218007
Coulomb energy  46.60516236495317
EXC  -9.234535810693586
PySCF time:  0.675799125
PySCF Grid Size:  (32080,)


 PySCF Dipole moment
Dipole moment(X, Y, Z, A.U.): -0.34711, -0.03275,  0.61733
Currently Used memory: 7.3G


Natoms : 3


NAO : 158


aux NAO : 85
Running DFT using 1 threads for Numba.



Calculating overlap and kinetic integrals...


Core H size in GB  0.000399424
done!
Time taken 0.09724145800000006 seconds.


Calculating three centered two electron and two-centered two-electron integrals...


Time taken for two-centered two-electron integrals 0.00920999999999994 seconds.



Performing Schwarz screening...
Threshold  1e-09
Time taken to evaluate the "diagonal" of 4c2e ERI tensor:  0.017764208000000004
Time taken to evaluate the square roots needed:  2.4999999999941735e-05
Time for significant indices evaluation:  0.0023290830000000096
Size of permanent array storing the significant indices of 3c2e ERI in GB  0.000301472
No. of elements in the standard three-centered two electron ERI tensor:  2121940
No. of elements in the triangular three-centered two electron ERI tensor:  1067685
No. of significant triplets based on Schwarz inequality and triangularity: 1067685 or 50.3% of original
Schwarz screening done!
Total time taken for Schwarz screening 0.02016979199999991 seconds.

Time taken to evaluate the nuclear potential matrix with strict Schwarz screening:  0.01967608399999987
Two Center Two electron ERI size in GB  5.78e-05
Three Center Two electron ERI size in GB  0.00854148
Three-centered two electron evaluation done!
Time taken for Cholesky factorization fo two-centered two-electron integrals 5.36250000000571e-05 seconds.

Time taken for Coulomb term related calculations (integrals, screening, prelims..) with the density fitting approximation  0.7497059170000002 seconds.


Using the user supplied grids!



No. of supplied/generated grid points:  32080
Size (in GB) for storing the coordinates of grid:       0.00076992
Size (in GB) for storing the weights of grid:           0.00025664
Size (in GB) for storing the density at gridpoints:     0.00025664

Will use batching to evaluate the XC term for memory efficiency.
Batch size:  5000
No. of batches:  7

Preliminary processing for XC term evaluations...
Calculating the value of basis functions (atomic orbitals) and get the indices of siginificantly contributing functions...
done!
Time taken 0.0021374160000000586 seconds.

Maximum no. of basis functions contributing to a batch of grid points:    158
Average no. of basis functions contributing to a batch of grid points:    155

You have asked to save the values of significant basis functions and their gradients on grid points so as to avoid recalculation for each SCF cycle.
Please note: This will require addtional memory that is approximately :0.2 GB
Calculating the value of significantly contributing basis functions (atomic orbitals)...
done!
Time taken 0.10517079200000001 seconds.



------------------------------------------------------
Exchange-Correlation Functional
------------------------------------------------------

XC Functional IDs supplied:  [101, 130]


Description of exchange functional: 

The Exchange function belongs to the family: GGA
Functional ID: 101
Functional Name: gga_x_pbe
Attributes:
    Name: Perdew, Burke & Ernzerhof
    Kind: 0
  Family: 2
Citations:
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)


Description of correlation functional: 

 The Correlation function belongs to the family: GGA
Functional ID: 130
Functional Name: gga_c_pbe
Attributes:
    Name: Perdew, Burke & Ernzerhof
    Kind: 1
  Family: 2
Citations:
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
------------------------------------------------------




Number of electrons:  10.507962657390232



------Iteration 1--------


Energies
Electron-Nuclear Energy       -201.55794136358224
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.40297659567156
Coulomb Energy                48.59896085519571
Exchange-Correlation Energy   -9.419862602103652
-------------------------
Total Energy  -76.84519963959964
-------------------------



Energy difference :  76.84519963959964


Time taken for the previous iteration: 0.1119426670000001


Number of electrons:  10.000000081360957



------Iteration 2--------


Energies
Electron-Nuclear Energy       -198.43224030937262
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                75.86052632112471
Coulomb Energy                46.246171646963944
Exchange-Correlation Energy   -9.178182914329788
-------------------------
Total Energy  -76.37305838039477
-------------------------



Energy difference :  0.47214125920487504


Time taken for the previous iteration: 0.10515225000000017


Number of electrons:  9.999999976484311



------Iteration 3--------


Energies
Electron-Nuclear Energy       -199.52009671713907
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.38192142240787
Coulomb Energy                46.89901774219135
Exchange-Correlation Energy   -9.275221885678699
-------------------------
Total Energy  -76.38371256299958
-------------------------



Energy difference :  0.010654182604810103


Time taken for the previous iteration: 0.10735549999999972


Number of electrons:  10.00000003429508



------Iteration 4--------


Energies
Electron-Nuclear Energy       -198.746117279733
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                75.99248773811631
Coulomb Energy                46.451851166167884
Exchange-Correlation Energy   -9.216640513084982
-------------------------
Total Energy  -76.38775201331478
-------------------------



Energy difference :  0.004039450315204363


Time taken for the previous iteration: 0.10672245899999977


Number of electrons:  10.000000014076953



------Iteration 5--------


Energies
Electron-Nuclear Energy       -199.12296269032342
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.17348642839737
Coulomb Energy                46.67367978575622
Exchange-Correlation Energy   -9.242919915552054
-------------------------
Total Energy  -76.38804951650289
-------------------------



Energy difference :  0.0002975031881078394


Time taken for the previous iteration: 0.10605783299999993


Number of electrons:  10.0000000207757



------Iteration 6--------


Energies
Electron-Nuclear Energy       -199.01273102084193
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.12152396971064
Coulomb Energy                46.60719616110387
Exchange-Correlation Energy   -9.23476970505148
-------------------------
Total Energy  -76.38811371985993
-------------------------



Energy difference :  6.420335704149238e-05


Time taken for the previous iteration: 0.10869937500000004


Number of electrons:  10.000000021043054



------Iteration 7--------


Energies
Electron-Nuclear Energy       -199.00977230977313
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.12022415258095
Coulomb Energy                46.60532521966833
Exchange-Correlation Energy   -9.234557729330017
-------------------------
Total Energy  -76.38811379163491
-------------------------



Energy difference :  7.177497707289149e-08


Time taken for the previous iteration: 0.10774449999999991



SCF Converged after 7 iterations!

-------------------------------------
Total Energy =  -76.38811379163491
-------------------------------------



Time taken : 1.7115465829999998 seconds.



-------------------------------------
Profiling
-------------------------------------
Preprocessing                           0.10730820800000007
Density Fitting                         0.04840029099999965
    DF (gamma)                          0.007670248999999796
    DF (coeff)                          0.008519585000000607
    DF (Jtri)                           0.024592291999999016
    DF (Cholesky)                       5.36250000000571e-05
DIIS                                    0.023220334000000342
KS matrix diagonalization               0.02601929199999997
One electron Integrals (S, T, Vnuc)     0.09724145800000006
Coulomb Integrals (2c2e + 3c2e)         0.7496522920000002
Grids construction                      0
Exchange-Correlation Term               0.6483731659999998
Misc.                                   0.01133154199999975
Complete SCF                            1.7115465829999998
Energy diff (PySCF-CrysX) 7.116796041373163e-10


PyFock Dipole moment
Dipole moment(X, Y, Z, A.U.): -0.3471225441036303 -0.03275287995075573 0.6173126148892019
Max Diff dipole moment (PySCF-CrysX) 1.4859643202580486e-05
