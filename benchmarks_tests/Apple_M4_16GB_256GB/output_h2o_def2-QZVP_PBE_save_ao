Cupy is not installed. GPU acceleration is not availble.
Operating System: Darwin 24.3.0
System Type: 64bit
CPU Model: Apple M4
Number of Cores: 10
Number of Threads: 10
Memory (GB): 16.0
Number of cores being actually used/requested for the benchmark: 1
Confirming that the environment variables are properly set...
OMP_NUM_THREADS = 1
OPENBLAS_NUM_THREADS = 1
MKL_NUM_THREADS = 1
VECLIB_MAXIMUM_THREADS = 1
NUMEXPR_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 25000
#INFO: **** input file is /Users/manas/Documents/PyFock/benchmarks_tests/benchmark_DFT_LDA_DF.py ****
####### NOTE: The scipy.linalg library appears to be using double the number of threads supplied for some reason.
####### To avoid such issues messing up the benchmarks, the benchmark should be run as 'taskset --cpu-list 0-3 python3 benchmark_DFT_LDA_DF.py'
####### This way one can set the number of CPUs seen by the python process and the benchmark would be much more reliable.
####### Furthermore, to confirm the CPU and memory usage throughout the whole process, one can profilie it using  
####### psrecord 13447 --interval 1 --duration 120 --plot 13447.png
#######
####### This may be required in some cases when using GPU on WSL
####### export NUMBA_CUDA_DRIVER="/usr/lib/wsl/lib/libcuda.so.1"

import os
import platform
import psutil
import numba
#numba.config.THREADING_LAYER='tbb'
# Set the number of threads/cores to be used by PyFock and PySCF
ncores = 1
os.environ['OMP_NUM_THREADS'] = str(ncores)
os.environ["OPENBLAS_NUM_THREADS"] = str(ncores) # export OPENBLAS_NUM_THREADS=4 
os.environ["MKL_NUM_THREADS"] = str(ncores) # export MKL_NUM_THREADS=4
os.environ["VECLIB_MAXIMUM_THREADS"] = str(ncores) # export VECLIB_MAXIMUM_THREADS=4
# os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=4
os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=1
# Set the max memory for PySCF
os.environ["PYSCF_MAX_MEMORY"] = str(25000) 

# Print system information 
from pyfock import Utils

Utils.print_sys_info()

# Check if the environment variables are properly set
print("Number of cores being actually used/requested for the benchmark:", ncores)
print('Confirming that the environment variables are properly set...')
print('OMP_NUM_THREADS =', os.environ.get('OMP_NUM_THREADS', None))
print('OPENBLAS_NUM_THREADS =', os.environ.get('OPENBLAS_NUM_THREADS', None))
print('MKL_NUM_THREADS =', os.environ.get('MKL_NUM_THREADS', None))
print('VECLIB_MAXIMUM_THREADS =', os.environ.get('VECLIB_MAXIMUM_THREADS', None))
print('NUMEXPR_NUM_THREADS =', os.environ.get('NUMEXPR_NUM_THREADS', None))
print('PYSCF_MAX_MEMORY =', os.environ.get('PYSCF_MAX_MEMORY', None))


# Run your tasks here
from pyfock import Basis
from pyfock import Mol
from pyfock import Integrals
from pyfock import DFT
from timeit import default_timer as timer
import numpy as np
import scipy

from pyscf import gto, dft, df, scf

#DFT SCF benchmark and comparison with PySCF
#Benchmarking and performance assessment and comparison using various techniques and different softwares

# LDA_X LDA_C_VWN 
# funcx = 1
# funcc = 7

# LDA_X LDA_C_PW 
# funcx = 1
# funcc = 12

# LDA_X LDA_C_PW_MOD 
# funcx = 1
# funcc = 13

# GGA_X_PBE, GGA_C_PBE (PBE)
funcx = 101
funcc = 130

# GGA_X_B88, GGA_C_LYP (BLYP)
# funcx = 106
# funcc = 131

funcidcrysx = [funcx, funcc]
funcidpyscf = str(funcx)+','+str(funcc)

# basis_set_name = 'sto-2g'
# basis_set_name = 'sto-3g'
# basis_set_name = 'sto-6g'
# basis_set_name = '6-31G'
# basis_set_name = 'def2-SVP'
# basis_set_name = 'def2-SVPD'
# basis_set_name = 'def2-TZVP'
basis_set_name = 'def2-QZVP'
# basis_set_name = 'def2-TZVPP'
# basis_set_name = 'def2-QZVPP'
# basis_set_name = 'def2-TZVPD'
# basis_set_name = 'def2-QZVPD'
# basis_set_name = 'def2-TZVPPD'
# basis_set_name = 'def2-QZVPPD'
# basis_set_name = 'cc-pVDZ'
# basis_set_name = 'ano-rcc'

auxbasis_name = 'def2-universal-jfit'
# auxbasis_name = 'def2-universal-jkfit'
# auxbasis_name = 'def2-TZVP'
# auxbasis_name = 'sto-3g'
# auxbasis_name = 'def2-SVP'
# auxbasis_name = '6-31G'

# xyzFilename = 'Benzene-Fulvene_Dimer.xyz'
# xyzFilename = 'Adenine-Thymine.xyz'
# xyzFilename = 'Zn.xyz'
# xyzFilename = 'Zn_dimer.xyz'
# xyzFilename = 'TPP.xyz'
# xyzFilename = 'Zn_TPP.xyz'
xyzFilename = 'H2O.xyz'

# xyzFilename = 'Caffeine.xyz'
# xyzFilename = 'Serotonin.xyz'
# xyzFilename = 'Cholesterol.xyz'
# xyzFilename = 'C60.xyz'
# xyzFilename = 'Taxol.xyz'
# xyzFilename = 'Valinomycin.xyz'
# xyzFilename = 'Olestra.xyz'
# xyzFilename = 'Ubiquitin.xyz'

### 1D Carbon Alkanes
# xyzFilename = 'Ethane.xyz'
# xyzFilename = 'Decane_C10H22.xyz'
# xyzFilename = 'Icosane_C20H42.xyz'
# xyzFilename = 'Tetracontane_C40H82.xyz'
# xyzFilename = 'Pentacontane_C50H102.xyz'
# xyzFilename = 'Octacontane_C80H162.xyz'
# xyzFilename = 'Hectane_C100H202.xyz'
# xyzFilename = 'Icosahectane_C120H242.xyz'

### 2D Carbon
# xyzFilename = 'Graphene_C16.xyz'
# xyzFilename = 'Graphene_C76.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'

### 3d Carbon Fullerenes
# xyzFilename = 'C60.xyz'
# xyzFilename = 'C70.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'


# ---------PySCF---------------
#Comparison with PySCF
molPySCF = gto.Mole()
molPySCF.atom = xyzFilename
molPySCF.basis = basis_set_name
molPySCF.cart = True
molPySCF.verbose = 4
molPySCF.max_memory=5000
# molPySCF.incore_anyway = True # Keeps the PySCF ERI integrals incore
molPySCF.build()
#print(molPySCF.cart_labels())

print('\n\nPySCF Results\n\n')
start=timer()
mf = dft.rks.RKS(molPySCF).density_fit(auxbasis=auxbasis_name)
# mf = scf.RHF(molPySCF).density_fit(auxbasis=auxbasis_name)
mf.xc = funcidpyscf
# mf.verbose = 4
mf.direct_scf = False
# mf.with_df.max_memory = 25000
# dmat_init = mf.init_guess_by_1e(molPySCF)
# dmat_init = mf.init_guess_by_huckel(molPySCF)
mf.init_guess = 'minao'
dmat_init = mf.init_guess_by_minao(molPySCF)
# mf.init_guess = 'atom'
# dmat_init = mf.init_guess_by_atom(molPySCF)
mf.max_cycle = 30
mf.conv_tol = 1e-7
mf.grids.level = 3
# print('begin df build')
# start_df_pyscf=timer()
# mf.with_df.build()
# duration_df_pyscf = timer()- start_df_pyscf
# print('PySCF df time: ', duration_df_pyscf)
# print('end df build')
energyPyscf = mf.kernel(dm0=dmat_init)
print('Nuc-Nuc PySCF= ', molPySCF.energy_nuc())
print('One electron integrals energy',mf.scf_summary['e1'])
print('Coulomb energy ',mf.scf_summary['coul'])
print('EXC ',mf.scf_summary['exc'])
duration = timer()-start
print('PySCF time: ', duration)
pyscfGrids = mf.grids
print('PySCF Grid Size: ', pyscfGrids.weights.shape)
print('\n\n PySCF Dipole moment')
dmat = mf.make_rdm1()
mol_dip_pyscf = mf.dip_moment(molPySCF, dmat, unit='AU')
mf = 0#None
import psutil

# Get memory information
memory_info = psutil.virtual_memory()

# Convert bytes to human-readable format
used_memory = psutil._common.bytes2human(memory_info.used)


# If you want to print in a more human-readable format, you can use psutil's utility function
print(f"Currently Used memory: {used_memory}")
#--------------------CrysX --------------------------

#Initialize a Mol object with somewhat large geometry
molCrysX = Mol(coordfile=xyzFilename)
print('\n\nNatoms :',molCrysX.natoms)
# print(molCrysX.coordsBohrs)

#Initialize a Basis object with a very large basis set
basis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=basis_set_name)})
print('\n\nNAO :',basis.bfs_nao)

auxbasis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=auxbasis_name)})
print('\n\naux NAO :',auxbasis.bfs_nao)

dftObj = DFT(molCrysX, basis, xc=funcidcrysx)
# GPU acceleration
dftObj.use_gpu = False
dftObj.keep_ao_in_gpu = False
dftObj.use_libxc = False
dftObj.n_streams = 1 # Changing this to anything other than 1 won't make any difference 
dftObj.n_gpus = 1 # Specify the number of GPUs
dftObj.free_gpu_mem = True
dftObj.threads_x = 32
dftObj.threads_y = 32
dftObj.dynamic_precision = False
dftObj.keep_ints3c2e_in_gpu = True
# SAO or CAO basis
dftObj.sao = False
# print(dmat_init)
# Using PySCF grids to compare the energies
energyCrysX, dmat = dftObj.scf(max_itr=35, ncores=ncores, dmat=dmat_init, conv_crit=1.0E-7, grids=pyscfGrids, \
                               isDF=True, auxbasis=auxbasis, rys=True, DF_algo=10, blocksize=5000, XC_algo=2, debug=False, \
                                sortGrids=False, save_ao_values=True, xc_bf_screen=True, threshold_schwarz=1e-9, \
                                strict_schwarz=True, cholesky=True, orthogonalize=True)
# print(dmat)

# Using CrysX grids 
# To get the same energies as PySCF (level=5) upto 1e-7 au, use the following settings
# radial_precision=1.0e-13
# level=3
# pruning by density with threshold = 1e-011
# alpha_min and alpha_max corresponding to QZVP
# energyCrysX, dmat = dftObj.scf(max_itr=30, ncores=ncores, dmat=dmat_init, grids=None, gridsLevel=3, isDF=True, auxbasis=auxbasis,
#                             rys=True, DF_algo=6, blocksize=5000, XC_algo=2, debug=False, sortGrids=False, save_ao_values=True,
#                             xc_bf_screen=True,threshold_schwarz=1e-9)


print('Energy diff (PySCF-CrysX)', abs(energyCrysX-energyPyscf))

print('\n\nPyFock Dipole moment')
M = Integrals.dipole_moment_mat_symm(basis)
mol_dip = molCrysX.get_dipole_moment(M, dmat)
print('Dipole moment(X, Y, Z, A.U.):', *mol_dip)
print('Max Diff dipole moment (PySCF-CrysX)', abs(mol_dip_pyscf-mol_dip).max())

#Print package versions
import joblib
import scipy
import numba
import threadpoolctl
import opt_einsum
import pylibxc
import llvmlite 
import cupy
import numexpr
import pyscf
print('\n\n\n Package versions')
print('pyscf version', pyscf.__version__)
# print('psi4 version', psi4.__version__)
print('np version', np.__version__)
print('joblib version', joblib.__version__)
print('numba version', numba.__version__)
print('threadpoolctl version', threadpoolctl.__version__)
print('opt_einsum version', opt_einsum.__version__)
# print('pylibxc version', pylibxc.__version__)
print('llvmlite version', llvmlite.__version__)
print('cupy version', cupy.__version__)
print('numexpr version', numexpr.__version__)
print('scipy version', scipy.__version__)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Manass-MacBook-Air.local', release='24.3.0', version='Darwin Kernel Version 24.3.0: Thu Jan  2 20:31:46 PST 2025; root:xnu-11215.81.4~4/RELEASE_ARM64_T8132', machine='arm64')  Threads 1
Python 3.9.6 (default, Mar 12 2025, 20:22:46) 
[Clang 17.0.0 (clang-1700.0.13.3)]
numpy 1.26.4  scipy 1.10.1  h5py 3.13.0
Date: Mon May 19 20:07:39 2025
PySCF version 2.9.0
PySCF path  /Users/manas/Library/Python/3.9/lib/python/site-packages/pyscf

[ENV] PYSCF_MAX_MEMORY 25000
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 3
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Cartesian GTO integrals (6d 10f)
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 O      1.531750110275   0.005922000426  -0.120880008702 AA    2.894588199692   0.011190958915  -0.228430110383 Bohr   0.0
[INPUT]  2 H      0.575968041466  -0.005249000378   0.024966001797 AA    1.088421854872  -0.009919173142   0.047178905822 Bohr   0.0
[INPUT]  3 H      1.906249137236  -0.037561002704   0.763218054946 AA    3.602288794565  -0.070980008075   1.442273097172 Bohr   0.0

nuclear repulsion = 9.13066687519452
number of shells = 37
number of NR pGTOs = 168
number of NR cGTOs = 142
basis = def2-QZVP
ecp = {}
CPU time:         2.95


PySCF Results


Initial guess from minao.


******** <class 'pyscf.df.df_jk.DFRKS'> ********
method = DFRKS
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
diis_damp = 0
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 30
direct_scf = False
chkfile to save SCF result = /var/folders/2v/15wx3xrs0tj4bz4kdgj4gfwh0000gn/T/tmp3kdvtm50
max_memory 5000 MB (current use 0 MB)
XC library pyscf.dft.libxc version 7.0.0
    S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques.,  SoftwareX 7, 1–5 (2018)
XC functionals = 101,130
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
    J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x1334e5940>
grids dens level: 3
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x1334141f0>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 33704
init E= -76.3310752765039
  HOMO = -0.402245764463052  LUMO = -0.0341716253433491
cycle= 1 E= -76.2765751655591  delta_E= 0.0545  |g|= 0.792  |ddm|= 1.08
  HOMO = -0.0799660604104952  LUMO = 0.017382618530899
cycle= 2 E= -75.8460717577168  delta_E= 0.431  |g|= 1.68  |ddm|= 1.89
  HOMO = -0.279585813601894  LUMO = -0.0203879123916564
cycle= 3 E= -76.3866383802217  delta_E= -0.541  |g|= 0.0551  |ddm|= 1.58
  HOMO = -0.26172373036849  LUMO = -0.0153906604311589
cycle= 4 E= -76.3872962360791  delta_E= -0.000658  |g|= 0.0113  |ddm|= 0.0472
  HOMO = -0.262927116071329  LUMO = -0.0164392834659152
cycle= 5 E= -76.3873154263137  delta_E= -1.92e-05  |g|= 0.00237  |ddm|= 0.00605
  HOMO = -0.263267940004312  LUMO = -0.016522303885804
cycle= 6 E= -76.3873165077232  delta_E= -1.08e-06  |g|= 9.14e-05  |ddm|= 0.0022
  HOMO = -0.263262085671949  LUMO = -0.0165225830388897
cycle= 7 E= -76.3873165093045  delta_E= -1.58e-09  |g|= 6.06e-06  |ddm|= 8.6e-05
  HOMO = -0.2632616905908  LUMO = -0.0165220061949621
Extra cycle  E= -76.3873165093068  delta_E= -2.33e-12  |g|= 4.88e-06  |ddm|= 8.9e-06
converged SCF energy = -76.3873165093068
Nuc-Nuc PySCF=  9.130666875194525
One electron integrals energy -122.91169239481214
Coulomb energy  46.63151197919488
EXC  -9.237802968884065
PySCF time:  0.5797342079999999
PySCF Grid Size:  (31280,)


 PySCF Dipole moment
Dipole moment(X, Y, Z, A.U.): -0.35805, -0.03380,  0.63702
Currently Used memory: 7.3G


Natoms : 3


NAO : 142


aux NAO : 85
Running DFT using 1 threads for Numba.



Calculating overlap and kinetic integrals...


Core H size in GB  0.000322624
done!
Time taken 0.08686129200000003 seconds.


Calculating three centered two electron and two-centered two-electron integrals...


Time taken for two-centered two-electron integrals 0.00918658299999997 seconds.



Performing Schwarz screening...
Threshold  1e-09
Time taken to evaluate the "diagonal" of 4c2e ERI tensor:  0.016059166000000014
Time taken to evaluate the square roots needed:  2.0541000000040555e-05
Time for significant indices evaluation:  0.0022376669999999432
Size of permanent array storing the significant indices of 3c2e ERI in GB  0.00024367999999999997
No. of elements in the standard three-centered two electron ERI tensor:  1713940
No. of elements in the triangular three-centered two electron ERI tensor:  863005
No. of significant triplets based on Schwarz inequality and triangularity: 863005 or 50.4% of original
Schwarz screening done!
Total time taken for Schwarz screening 0.018372792000000082 seconds.

Time taken to evaluate the nuclear potential matrix with strict Schwarz screening:  0.017757707999999983
Two Center Two electron ERI size in GB  5.78e-05
Three Center Two electron ERI size in GB  0.00690404
Three-centered two electron evaluation done!
Time taken for Cholesky factorization fo two-centered two-electron integrals 5.412500000012699e-05 seconds.

Time taken for Coulomb term related calculations (integrals, screening, prelims..) with the density fitting approximation  0.6428628330000001 seconds.


Using the user supplied grids!



No. of supplied/generated grid points:  31280
Size (in GB) for storing the coordinates of grid:       0.00075072
Size (in GB) for storing the weights of grid:           0.00025024
Size (in GB) for storing the density at gridpoints:     0.00025024

Will use batching to evaluate the XC term for memory efficiency.
Batch size:  5000
No. of batches:  7

Preliminary processing for XC term evaluations...
Calculating the value of basis functions (atomic orbitals) and get the indices of siginificantly contributing functions...
done!
Time taken 0.0021428749999998775 seconds.

Maximum no. of basis functions contributing to a batch of grid points:    142
Average no. of basis functions contributing to a batch of grid points:    138

You have asked to save the values of significant basis functions and their gradients on grid points so as to avoid recalculation for each SCF cycle.
Please note: This will require addtional memory that is approximately :0.1 GB
Calculating the value of significantly contributing basis functions (atomic orbitals)...
done!
Time taken 0.09319170799999998 seconds.



------------------------------------------------------
Exchange-Correlation Functional
------------------------------------------------------

XC Functional IDs supplied:  [101, 130]


Description of exchange functional: 

The Exchange function belongs to the family: GGA
Functional ID: 101
Functional Name: gga_x_pbe
Attributes:
    Name: Perdew, Burke & Ernzerhof
    Kind: 0
  Family: 2
Citations:
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)


Description of correlation functional: 

 The Correlation function belongs to the family: GGA
Functional ID: 130
Functional Name: gga_c_pbe
Attributes:
    Name: Perdew, Burke & Ernzerhof
    Kind: 1
  Family: 2
Citations:
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 77, 3865 (1996)
   J. P. Perdew, K. Burke, and M. Ernzerhof.,  Phys. Rev. Lett. 78, 1396 (1997)
------------------------------------------------------




Number of electrons:  10.01592522574218



------Iteration 1--------


Energies
Electron-Nuclear Energy       -198.3517026836467
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.51569869344715
Coulomb Energy                45.70286857332657
Exchange-Correlation Energy   -9.160935415880191
-------------------------
Total Energy  -76.1634039575342
-------------------------



Energy difference :  76.1634039575342


Time taken for the previous iteration: 0.10221533300000019


Number of electrons:  9.999999826179197



------Iteration 2--------


Energies
Electron-Nuclear Energy       -201.65222148200846
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                77.35853010438105
Coulomb Energy                48.24840583310418
Exchange-Correlation Energy   -9.432420863129574
-------------------------
Total Energy  -76.34703953243385
-------------------------



Energy difference :  0.18363557489965388


Time taken for the previous iteration: 0.09385508299999978


Number of electrons:  10.000000212373543



------Iteration 3--------


Energies
Electron-Nuclear Energy       -194.40239612719574
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                73.96568532437136
Coulomb Energy                43.936089542179886
Exchange-Correlation Energy   -8.91451200371039
-------------------------
Total Energy  -76.28446638913593
-------------------------



Energy difference :  0.06257314329792507


Time taken for the previous iteration: 0.08855624999999989


Number of electrons:  9.999999957843709



------Iteration 4--------


Energies
Electron-Nuclear Energy       -199.47407747461534
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.33397330362241
Coulomb Energy                46.89222173291152
Exchange-Correlation Energy   -9.26849965182795
-------------------------
Total Energy  -76.38571521469035
-------------------------



Energy difference :  0.10124882555442127


Time taken for the previous iteration: 0.08919791700000035


Number of electrons:  9.999999969071983



------Iteration 5--------


Energies
Electron-Nuclear Energy       -199.07179436679598
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.14394621571489
Coulomb Energy                46.65007406920593
Exchange-Correlation Energy   -9.240204309905153
-------------------------
Total Energy  -76.38731151656134
-------------------------



Energy difference :  0.0015963018709896915


Time taken for the previous iteration: 0.08983745800000031


Number of electrons:  9.999999970753983



------Iteration 6--------


Energies
Electron-Nuclear Energy       -199.0385278731597
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.12767162613241
Coulomb Energy                46.63054084519043
Exchange-Correlation Energy   -9.237667958561932
-------------------------
Total Energy  -76.38731648517981
-------------------------



Energy difference :  4.968618469547437e-06


Time taken for the previous iteration: 0.0903113750000002


Number of electrons:  9.99999997062132



------Iteration 7--------


Energies
Electron-Nuclear Energy       -199.0405551497141
Nuclear repulsion Energy      9.130666875218981
Kinetic Energy                76.12874587551141
Coulomb Energy                46.63164779388873
Exchange-Correlation Energy   -9.23782190332865
-------------------------
Total Energy  -76.38731650842361
-------------------------



Energy difference :  2.324379977380886e-08


Time taken for the previous iteration: 0.08988566599999981



SCF Converged after 7 iterations!

-------------------------------------
Total Energy =  -76.38731650842361
-------------------------------------



Time taken : 1.472104542 seconds.



-------------------------------------
Profiling
-------------------------------------
Preprocessing                           0.09533458299999986
Density Fitting                         0.044763207000000804
    DF (gamma)                          0.006901415999999383
    DF (coeff)                          0.008447708000000276
    DF (Jtri)                           0.022054877000000195
    DF (Cholesky)                       5.412500000012699e-05
DIIS                                    0.020069875000000348
KS matrix diagonalization               0.023049955999999483
One electron Integrals (S, T, Vnuc)     0.08686129200000003
Coulomb Integrals (2c2e + 3c2e)         0.642808708
Grids construction                      0
Exchange-Correlation Term               0.5471867069999998
Misc.                                   0.012030213999999706
Complete SCF                            1.472104542
Energy diff (PySCF-CrysX) 8.831904096950893e-10


PyFock Dipole moment
Dipole moment(X, Y, Z, A.U.): -0.3580317366708634 -0.033797677553784454 0.6370199125494987
Max Diff dipole moment (PySCF-CrysX) 2.1924465741562926e-05
