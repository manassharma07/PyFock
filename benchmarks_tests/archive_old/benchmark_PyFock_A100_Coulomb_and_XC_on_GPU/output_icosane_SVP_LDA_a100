Operating System: Linux 4.18.0-425.13.1.el8_7.x86_64
System Type: 64bit
CPU Model: AMD EPYC 73F3 16-Core Processor
Number of Cores: 32
Number of Threads: 64
Memory (GB): 503.74185943603516
Number of cores being actually used/requested for the benchmark: 2
Confirming that the environment variables are properly set...
OMP_NUM_THREADS = 2
OPENBLAS_NUM_THREADS = 2
MKL_NUM_THREADS = 2
VECLIB_MAXIMUM_THREADS = 2
NUMEXPR_NUM_THREADS = 2
PYSCF_MAX_MEMORY = 25000
#INFO: **** input file is /home/lu29vow/GPU_Test/tmp_dir/PyFock/benchmarks_tests/benchmark_DFT_LDA_DF.py ****
####### NOTE: The scipy.linalg library appears to be using double the number of threads supplied for some reason.
####### To avoid such issues messing up the benchmarks, the benchmark should be run as 'taskset --cpu-list 0-3 python3 benchmark_DFT_LDA_DF.py'
####### This way one can set the number of CPUs seen by the python process and the benchmark would be much more reliable.
####### Furthermore, to confirm the CPU and memory usage throughout the whole process, one can profilie it using  
####### psrecord 13447 --interval 1 --duration 120 --plot 13447.png
#######
####### This may be required in some cases when using GPU on WSL
####### export NUMBA_CUDA_DRIVER="/usr/lib/wsl/lib/libcuda.so.1"

import os
import platform
import psutil
import numba
numba.config.THREADING_LAYER='omp'
# Set the number of threads/cores to be used by PyFock and PySCF
ncores = 2
os.environ['OMP_NUM_THREADS'] = str(ncores)
os.environ["OPENBLAS_NUM_THREADS"] = str(ncores) # export OPENBLAS_NUM_THREADS=4 
os.environ["MKL_NUM_THREADS"] = str(ncores) # export MKL_NUM_THREADS=4
os.environ["VECLIB_MAXIMUM_THREADS"] = str(ncores) # export VECLIB_MAXIMUM_THREADS=4
# os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=4
os.environ["NUMEXPR_NUM_THREADS"] = str(ncores) # export NUMEXPR_NUM_THREADS=1
# Set the max memory for PySCF
os.environ["PYSCF_MAX_MEMORY"] = str(25000) 

# Print system information 
from pyfock import Utils

Utils.print_sys_info()

# Check if the environment variables are properly set
print("Number of cores being actually used/requested for the benchmark:", ncores)
print('Confirming that the environment variables are properly set...')
print('OMP_NUM_THREADS =', os.environ.get('OMP_NUM_THREADS', None))
print('OPENBLAS_NUM_THREADS =', os.environ.get('OPENBLAS_NUM_THREADS', None))
print('MKL_NUM_THREADS =', os.environ.get('MKL_NUM_THREADS', None))
print('VECLIB_MAXIMUM_THREADS =', os.environ.get('VECLIB_MAXIMUM_THREADS', None))
print('NUMEXPR_NUM_THREADS =', os.environ.get('NUMEXPR_NUM_THREADS', None))
print('PYSCF_MAX_MEMORY =', os.environ.get('PYSCF_MAX_MEMORY', None))


# Run your tasks here
from pyfock import Basis
from pyfock import Mol
from pyfock import Integrals
from pyfock import DFT
from timeit import default_timer as timer
import numpy as np
import scipy

from pyscf import gto, dft, df, scf

#DFT SCF benchmark and comparison with PySCF
#Benchmarking and performance assessment and comparison using various techniques and different softwares

# LDA_X LDA_C_VWN 
funcx = 1
funcc = 7

# LDA_X LDA_C_PW 
# funcx = 1
# funcc = 12

# LDA_X LDA_C_PW_MOD 
# funcx = 1
# funcc = 13

# GGA_X_PBE, GGA_C_PBE (PBE)
# funcx = 101
# funcc = 130

# GGA_X_B88, GGA_C_LYP (BLYP)
# funcx = 106
# funcc = 131

funcidcrysx = [funcx, funcc]
funcidpyscf = str(funcx)+','+str(funcc)

# basis_set_name = 'sto-2g'
# basis_set_name = 'sto-3g'
# basis_set_name = 'sto-6g'
# basis_set_name = '6-31G'
basis_set_name = 'def2-SVP'
# basis_set_name = 'def2-SVPD'
# basis_set_name = 'def2-TZVP'
# basis_set_name = 'def2-QZVP'
# basis_set_name = 'def2-TZVPP'
# basis_set_name = 'def2-QZVPP'
# basis_set_name = 'def2-TZVPD'
# basis_set_name = 'def2-QZVPD'
# basis_set_name = 'def2-TZVPPD'
# basis_set_name = 'def2-QZVPPD'
# basis_set_name = 'cc-pVDZ'
# basis_set_name = 'ano-rcc'

auxbasis_name = 'def2-universal-jfit'
# auxbasis_name = 'def2-universal-jkfit'
# auxbasis_name = 'def2-TZVP'
# auxbasis_name = 'sto-3g'
# auxbasis_name = 'def2-SVP'
# auxbasis_name = '6-31G'

# xyzFilename = 'Benzene-Fulvene_Dimer.xyz'
# xyzFilename = 'Adenine-Thymine.xyz'
# xyzFilename = 'Zn.xyz'
# xyzFilename = 'Zn_dimer.xyz'
# xyzFilename = 'TPP.xyz'
# xyzFilename = 'Zn_TPP.xyz'
# xyzFilename = 'H2O.xyz'

# xyzFilename = 'Caffeine.xyz'
# xyzFilename = 'Serotonin.xyz'
# xyzFilename = 'Cholesterol.xyz'
# xyzFilename = 'C60.xyz'
# xyzFilename = 'Taxol.xyz'
# xyzFilename = 'Valinomycin.xyz'
# xyzFilename = 'Olestra.xyz'
# xyzFilename = 'Ubiquitin.xyz'

### 1D Carbon Alkanes
# xyzFilename = 'Ethane.xyz'
# xyzFilename = 'Decane_C10H22.xyz'
xyzFilename = 'Icosane_C20H42.xyz'
# xyzFilename = 'Tetracontane_C40H82.xyz'
# xyzFilename = 'Pentacontane_C50H102.xyz'
# xyzFilename = 'Octacontane_C80H162.xyz'
# xyzFilename = 'Hectane_C100H202.xyz'
# xyzFilename = 'Icosahectane_C120H242.xyz'

### 2D Carbon
# xyzFilename = 'Graphene_C16.xyz'
# xyzFilename = 'Graphene_C76.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'

### 3d Carbon Fullerenes
# xyzFilename = 'C60.xyz'
# xyzFilename = 'C70.xyz'
# xyzFilename = 'Graphene_C102.xyz'
# xyzFilename = 'Graphene_C184.xyz'
# xyzFilename = 'Graphene_C210.xyz'
# xyzFilename = 'Graphene_C294.xyz'


# ---------PySCF---------------
#Comparison with PySCF
molPySCF = gto.Mole()
molPySCF.atom = xyzFilename
molPySCF.basis = basis_set_name
molPySCF.cart = True
molPySCF.verbose = 4
molPySCF.max_memory=25000
# molPySCF.incore_anyway = True # Keeps the PySCF ERI integrals incore
molPySCF.build()
#print(molPySCF.cart_labels())

print('\n\nPySCF Results\n\n')
start=timer()
mf = dft.rks.RKS(molPySCF).density_fit(auxbasis=auxbasis_name)
# mf = scf.RHF(molPySCF).density_fit(auxbasis=auxbasis_name)
mf.xc = funcidpyscf
# mf.verbose = 4
mf.direct_scf = False
# mf.with_df.max_memory = 25000
# dmat_init = mf.init_guess_by_1e(molPySCF)
# dmat_init = mf.init_guess_by_huckel(molPySCF)
mf.init_guess = 'minao'
dmat_init = mf.init_guess_by_minao(molPySCF)
# mf.init_guess = 'atom'
# dmat_init = mf.init_guess_by_atom(molPySCF)
mf.max_cycle = 1
mf.conv_tol = 1e-7
mf.grids.level = 5
# print('begin df build')
# start_df_pyscf=timer()
# mf.with_df.build()
# duration_df_pyscf = timer()- start_df_pyscf
# print('PySCF df time: ', duration_df_pyscf)
# print('end df build')
energyPyscf = mf.kernel(dm0=dmat_init)
print('Nuc-Nuc PySCF= ', molPySCF.energy_nuc())
print('One electron integrals energy',mf.scf_summary['e1'])
print('Coulomb energy ',mf.scf_summary['coul'])
print('EXC ',mf.scf_summary['exc'])
duration = timer()-start
print('PySCF time: ', duration)
pyscfGrids = mf.grids
print('PySCF Grid Size: ', pyscfGrids.weights.shape)
print('\n\n PySCF Dipole moment')
dmat = mf.make_rdm1()
mol_dip_pyscf = mf.dip_moment(molPySCF, dmat, unit='AU')
mf = 0#None
import psutil

# Get memory information
memory_info = psutil.virtual_memory()

# Convert bytes to human-readable format
used_memory = psutil._common.bytes2human(memory_info.used)


# If you want to print in a more human-readable format, you can use psutil's utility function
print(f"Currently Used memory: {used_memory}")
#--------------------CrysX --------------------------

#Initialize a Mol object with somewhat large geometry
molCrysX = Mol(coordfile=xyzFilename)
print('\n\nNatoms :',molCrysX.natoms)
# print(molCrysX.coordsBohrs)

#Initialize a Basis object with a very large basis set
basis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=basis_set_name)})
print('\n\nNAO :',basis.bfs_nao)

auxbasis = Basis(molCrysX, {'all':Basis.load(mol=molCrysX, basis_name=auxbasis_name)})
print('\n\naux NAO :',auxbasis.bfs_nao)

dftObj = DFT(molCrysX, basis, xc=funcidcrysx)
# GPU acceleration
dftObj.use_gpu = True
dftObj.keep_ao_in_gpu = False
dftObj.use_libxc = False
dftObj.n_streams = 1 # Changing this to anything other than 1 won't make any difference 
dftObj.n_gpus = 1 # Specify the number of GPUs
dftObj.free_gpu_mem = True
dftObj.threads_x = 1
dftObj.threads_y = 1024
# SAO or CAO basis
dftObj.sao = False
# print(dmat_init)
# Using PySCF grids to compare the energies
energyCrysX, dmat = dftObj.scf(max_itr=35, ncores=ncores, dmat=dmat_init, conv_crit=1.0E-7, grids=pyscfGrids, \
                               isDF=True, auxbasis=auxbasis, rys=True, DF_algo=10, blocksize=51200, XC_algo=3, debug=False, \
                                sortGrids=False, save_ao_values=False, xc_bf_screen=True, threshold_schwarz=1e-9, \
                                strict_schwarz=False, cholesky=True, orthogonalize=True)
# print(dmat)

# Using CrysX grids 
# To get the same energies as PySCF (level=5) upto 1e-7 au, use the following settings
# radial_precision=1.0e-13
# level=3
# pruning by density with threshold = 1e-011
# alpha_min and alpha_max corresponding to QZVP
# energyCrysX, dmat = dftObj.scf(max_itr=30, ncores=ncores, dmat=dmat_init, grids=None, gridsLevel=3, isDF=True, auxbasis=auxbasis,
#                             rys=True, DF_algo=6, blocksize=5000, XC_algo=2, debug=False, sortGrids=False, save_ao_values=True,
#                             xc_bf_screen=True,threshold_schwarz=1e-9)


print('Energy diff (PySCF-CrysX)', abs(energyCrysX-energyPyscf))

print('\n\nPyFock Dipole moment')
M = Integrals.dipole_moment_mat_symm(basis)
mol_dip = molCrysX.get_dipole_moment(M, dmat)
print('Dipole moment(X, Y, Z, A.U.):', *mol_dip)
print('Max Diff dipole moment (PySCF-CrysX)', abs(mol_dip_pyscf-mol_dip).max())

#Print package versions
import joblib
import scipy
import numba
import threadpoolctl
import opt_einsum
import pylibxc
import llvmlite 
import cupy
import numexpr
import pyscf
print('\n\n\n Package versions')
print('pyscf version', pyscf.__version__)
# print('psi4 version', psi4.__version__)
print('np version', np.__version__)
print('joblib version', joblib.__version__)
print('numba version', numba.__version__)
print('threadpoolctl version', threadpoolctl.__version__)
print('opt_einsum version', opt_einsum.__version__)
# print('pylibxc version', pylibxc.__version__)
print('llvmlite version', llvmlite.__version__)
print('cupy version', cupy.__version__)
print('numexpr version', numexpr.__version__)
print('scipy version', scipy.__version__)
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='gpu017.cluster', release='4.18.0-425.13.1.el8_7.x86_64', version='#1 SMP Tue Feb 21 04:20:52 EST 2023', machine='x86_64')  Threads 2
Python 3.10.13 (tags/v3.10.13-25-g07fbd8e9251-dirty:07fbd8e9251, Sep 27 2023, 23:32:09) [GCC 13.2.0]
numpy 1.26.3  scipy 1.10.1
Date: Thu Feb  1 12:26:34 2024
PySCF version 2.4.0
PySCF path  /home/lu29vow/.conda/envs/GPU/lib/python3.10/site-packages/pyscf

[ENV] PYSCF_MAX_MEMORY 25000
[CONFIG] conf_file None
[INPUT] verbose = 4
[INPUT] num. atoms = 62
[INPUT] num. electrons = 162
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Cartesian GTO integrals (6d 10f)
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 C     -0.622000000000  -0.445400000000   0.000000000000 AA   -1.175409649479  -0.841684015881   0.000000000000 Bohr   0.0
[INPUT]  2 C     -1.876500000000   0.430500000000   0.000000000000 AA   -3.546071072746   0.813527096625   0.000000000000 Bohr   0.0
[INPUT]  3 C     -3.120400000000  -0.460300000000   0.000000000000 AA   -5.896701399093  -0.869840935137   0.000000000000 Bohr   0.0
[INPUT]  4 C     -4.374900000000   0.415500000000   0.000000000000 AA   -8.267362822360   0.785181204757   0.000000000000 Bohr   0.0
[INPUT]  5 C     -5.618800000000  -0.475300000000   0.000000000000 AA  -10.617993148706  -0.898186827006   0.000000000000 Bohr   0.0
[INPUT]  6 C     -6.873300000000   0.400600000000   0.000000000000 AA  -12.988654571973   0.757024285501   0.000000000000 Bohr   0.0
[INPUT]  7 C     -8.117300000000  -0.490200000000   0.000000000000 AA  -15.339473870932  -0.926343746262   0.000000000000 Bohr   0.0
[INPUT]  8 C     -9.371800000000   0.385700000000   0.000000000000 AA  -17.710135294199   0.728867366245   0.000000000000 Bohr   0.0
[INPUT]  9 C    -10.615700000000  -0.505100000000   0.000000000000 AA  -20.060765620545  -0.954500665518   0.000000000000 Bohr   0.0
[INPUT] 10 C    -11.870200000000   0.370700000000   0.000000000000 AA  -22.431427043812   0.700521474376   0.000000000000 Bohr   0.0
[INPUT] 11 C      0.622000000000   0.445400000000   0.000000000000 AA    1.175409649479   0.841684015881   0.000000000000 Bohr   0.0
[INPUT] 12 C      1.876500000000  -0.430500000000   0.000000000000 AA    3.546071072746  -0.813527096625   0.000000000000 Bohr   0.0
[INPUT] 13 C      3.120400000000   0.460300000000   0.000000000000 AA    5.896701399093   0.869840935137   0.000000000000 Bohr   0.0
[INPUT] 14 C      4.374900000000  -0.415500000000   0.000000000000 AA    8.267362822360  -0.785181204757   0.000000000000 Bohr   0.0
[INPUT] 15 C      5.618800000000   0.475300000000   0.000000000000 AA   10.617993148706   0.898186827006   0.000000000000 Bohr   0.0
[INPUT] 16 C      6.873300000000  -0.400600000000   0.000000000000 AA   12.988654571973  -0.757024285501   0.000000000000 Bohr   0.0
[INPUT] 17 C      8.117300000000   0.490200000000   0.000000000000 AA   15.339473870932   0.926343746262   0.000000000000 Bohr   0.0
[INPUT] 18 C      9.371800000000  -0.385700000000   0.000000000000 AA   17.710135294199  -0.728867366245   0.000000000000 Bohr   0.0
[INPUT] 19 C     10.615700000000   0.505100000000   0.000000000000 AA   20.060765620545   0.954500665518   0.000000000000 Bohr   0.0
[INPUT] 20 C     11.870200000000  -0.370700000000   0.000000000000 AA   22.431427043812  -0.700521474376   0.000000000000 Bohr   0.0
[INPUT] 21 H     -0.618200000000  -1.074700000000   0.890000000000 AA   -1.168228690206  -2.030888666070   1.681856250863 Bohr   0.0
[INPUT] 22 H     -0.618200000000  -1.074700000000  -0.890000000000 AA   -1.168228690206  -2.030888666070  -1.681856250863 Bohr   0.0
[INPUT] 23 H     -1.880200000000   1.059800000000   0.890000000000 AA   -3.553063059407   2.002731746814   1.681856250863 Bohr   0.0
[INPUT] 24 H     -1.880200000000   1.059800000000  -0.890000000000 AA   -3.553063059407   2.002731746814  -1.681856250863 Bohr   0.0
[INPUT] 25 H     -3.116600000000  -1.089600000000  -0.890000000000 AA   -5.889520439819  -2.059045585326  -1.681856250863 Bohr   0.0
[INPUT] 26 H     -3.116600000000  -1.089600000000   0.890000000000 AA   -5.889520439819  -2.059045585326   1.681856250863 Bohr   0.0
[INPUT] 27 H     -4.378700000000   1.044800000000   0.890000000000 AA   -8.274543781633   1.974385854946   1.681856250863 Bohr   0.0
[INPUT] 28 H     -4.378700000000   1.044800000000  -0.890000000000 AA   -8.274543781633   1.974385854946  -1.681856250863 Bohr   0.0
[INPUT] 29 H     -5.615100000000  -1.104600000000  -0.890000000000 AA  -10.611001162045  -2.087391477195  -1.681856250863 Bohr   0.0
[INPUT] 30 H     -5.615100000000  -1.104600000000   0.890000000000 AA  -10.611001162045  -2.087391477195   1.681856250863 Bohr   0.0
[INPUT] 31 H     -6.877100000000   1.029900000000   0.890000000000 AA  -12.995835531246   1.946228935690   1.681856250863 Bohr   0.0
[INPUT] 32 H     -6.877100000000   1.029900000000  -0.890000000000 AA  -12.995835531246   1.946228935690  -1.681856250863 Bohr   0.0
[INPUT] 33 H     -8.113500000000  -1.119500000000  -0.890000000000 AA  -15.332292911659  -2.115548396451  -1.681856250863 Bohr   0.0
[INPUT] 34 H     -8.113500000000  -1.119500000000   0.890000000000 AA  -15.332292911659  -2.115548396451   1.681856250863 Bohr   0.0
[INPUT] 35 H     -9.375500000000   1.015000000000   0.890000000000 AA  -17.717127280860   1.918072016434   1.681856250863 Bohr   0.0
[INPUT] 36 H     -9.375500000000   1.015000000000  -0.890000000000 AA  -17.717127280860   1.918072016434  -1.681856250863 Bohr   0.0
[INPUT] 37 H    -10.611900000000  -1.134400000000  -0.890000000000 AA  -20.053584661272  -2.143705315707  -1.681856250863 Bohr   0.0
[INPUT] 38 H    -10.611900000000  -1.134400000000   0.890000000000 AA  -20.053584661272  -2.143705315707   1.681856250863 Bohr   0.0
[INPUT] 39 H    -11.874000000000   1.000000000000  -0.890000000000 AA  -22.438608003086   1.889726124565  -1.681856250863 Bohr   0.0
[INPUT] 40 H    -12.756400000000  -0.263900000000   0.000000000000 AA  -24.106102335402  -0.498698724273   0.000000000000 Bohr   0.0
[INPUT] 41 H    -11.874000000000   1.000000000000   0.890000000000 AA  -22.438608003086   1.889726124565   1.681856250863 Bohr   0.0
[INPUT] 42 H      0.618200000000   1.074700000000  -0.890000000000 AA    1.168228690206   2.030888666070  -1.681856250863 Bohr   0.0
[INPUT] 43 H      0.618200000000   1.074700000000   0.890000000000 AA    1.168228690206   2.030888666070   1.681856250863 Bohr   0.0
[INPUT] 44 H      1.880200000000  -1.059800000000   0.890000000000 AA    3.553063059407  -2.002731746814   1.681856250863 Bohr   0.0
[INPUT] 45 H      1.880200000000  -1.059800000000  -0.890000000000 AA    3.553063059407  -2.002731746814  -1.681856250863 Bohr   0.0
[INPUT] 46 H      3.116600000000   1.089600000000  -0.890000000000 AA    5.889520439819   2.059045585326  -1.681856250863 Bohr   0.0
[INPUT] 47 H      3.116600000000   1.089600000000   0.890000000000 AA    5.889520439819   2.059045585326   1.681856250863 Bohr   0.0
[INPUT] 48 H      4.378700000000  -1.044800000000   0.890000000000 AA    8.274543781633  -1.974385854946   1.681856250863 Bohr   0.0
[INPUT] 49 H      4.378700000000  -1.044800000000  -0.890000000000 AA    8.274543781633  -1.974385854946  -1.681856250863 Bohr   0.0
[INPUT] 50 H      5.615100000000   1.104600000000  -0.890000000000 AA   10.611001162045   2.087391477195  -1.681856250863 Bohr   0.0
[INPUT] 51 H      5.615100000000   1.104600000000   0.890000000000 AA   10.611001162045   2.087391477195   1.681856250863 Bohr   0.0
[INPUT] 52 H      6.877100000000  -1.029900000000   0.890000000000 AA   12.995835531246  -1.946228935690   1.681856250863 Bohr   0.0
[INPUT] 53 H      6.877100000000  -1.029900000000  -0.890000000000 AA   12.995835531246  -1.946228935690  -1.681856250863 Bohr   0.0
[INPUT] 54 H      8.113500000000   1.119500000000  -0.890000000000 AA   15.332292911659   2.115548396451  -1.681856250863 Bohr   0.0
[INPUT] 55 H      8.113500000000   1.119500000000   0.890000000000 AA   15.332292911659   2.115548396451   1.681856250863 Bohr   0.0
[INPUT] 56 H      9.375500000000  -1.015000000000   0.890000000000 AA   17.717127280860  -1.918072016434   1.681856250863 Bohr   0.0
[INPUT] 57 H      9.375500000000  -1.015000000000  -0.890000000000 AA   17.717127280860  -1.918072016434  -1.681856250863 Bohr   0.0
[INPUT] 58 H     10.611900000000   1.134400000000  -0.890000000000 AA   20.053584661272   2.143705315707  -1.681856250863 Bohr   0.0
[INPUT] 59 H     10.611900000000   1.134400000000   0.890000000000 AA   20.053584661272   2.143705315707   1.681856250863 Bohr   0.0
[INPUT] 60 H     11.874000000000  -1.000000000000   0.890000000000 AA   22.438608003086  -1.889726124565   1.681856250863 Bohr   0.0
[INPUT] 61 H     11.874000000000  -1.000000000000  -0.890000000000 AA   22.438608003086  -1.889726124565  -1.681856250863 Bohr   0.0
[INPUT] 62 H     12.756400000000   0.263900000000   0.000000000000 AA   24.106102335402   0.498698724273   0.000000000000 Bohr   0.0

nuclear repulsion = 1381.75390619869
number of shells = 246
number of NR pGTOs = 794
number of NR cGTOs = 510
basis = def2-SVP
ecp = {}
CPU time:         1.50


PySCF Results


Initial guess from minao.


******** <class 'pyscf.df.df_jk.DFRKS'> ********
method = DFRKS
initial guess = minao
damping factor = 0
level_shift factor = 0
DIIS = <class 'pyscf.scf.diis.CDIIS'>
diis_start_cycle = 1
diis_space = 8
SCF conv_tol = 1e-07
SCF conv_tol_grad = None
SCF max_cycles = 1
direct_scf = False
chkfile to save SCF result = /tmp/tmpr57k6ho0
max_memory 25000 MB (current use 377 MB)
XC library pyscf.dft.libxc version 6.1.0
    S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques.,  SoftwareX 7, 1–5 (2018)
XC functionals = 1,7
    P. A. M. Dirac.,  Math. Proc. Cambridge Philos. Soc. 26, 376 (1930)
    F. Bloch.,  Z. Phys. 57, 545 (1929)
    S. H. Vosko, L. Wilk, and M. Nusair.,  Can. J. Phys. 58, 1200 (1980)
radial grids: 
    Treutler-Ahlrichs [JCP 102, 346 (1995); DOI:10.1063/1.469408] (M4) radial grids
    
becke partition: Becke, JCP 88, 2547 (1988); DOI:10.1063/1.454033
pruning grids: <function nwchem_prune at 0x15442c78a200>
grids dens level: 5
symmetrized grids: False
atomic radii adjust function: <function treutler_atomic_radii_adjust at 0x15442c78a170>
small_rho_cutoff = 1e-07
Set gradient conv threshold to 0.000316228
tot grids = 1850616
init E= -779.920965202522
  HOMO = -0.35566536465385  LUMO = -0.0253390289796417
cycle= 1 E= -779.04075109495  delta_E= 0.88  |g|= 1.18  |ddm|= 8.06
SCF not converged.
SCF energy = -779.04075109495
Nuc-Nuc PySCF=  1381.7539061986924
One electron integrals energy -3819.653160429216
Coulomb energy  1776.7025648088575
EXC  -117.84406167328424
PySCF time:  79.48181038349867
PySCF Grid Size:  (1497824,)


 PySCF Dipole moment
Dipole moment(X, Y, Z, A.U.):  0.00000,  0.00000, -0.00000
Currently Used memory: 7.5G


Natoms : 62


NAO : 510


aux NAO : 1724
Running DFT using 2 threads for Numba.


GPU acceleration is enabled. Currently this only accelerates AO values and XC term evaluation.
GPU(s) information:
Found 1 CUDA devices
id 0    b'NVIDIA A100-SXM4-80GB'                              [SUPPORTED]
                      Compute Capability: 8.0
                           PCI Device ID: 0
                              PCI Bus ID: 1
                                    UUID: GPU-91ae39d5-a40f-f6b6-3db4-c87f37935afa
                                Watchdog: Disabled
             FP32/FP64 Performance Ratio: 2
Summary:
	1/1 devices are supported
True
Max threads per block supported by the GPU:  1024
The user has specified to use 1 GPU(s).
Threads per block configuration:  (1, 1024)


Will use dynamic precision. 
This means that the XC term will be evaluated in single precision until the 
relative energy difference b/w successive iterations is less than 5.0E-7.

Calculating one electron integrals...


Core H size in GB  0.0020808
done!
Time taken 0.31270615942776203 seconds.


Calculating three centered two electron and two-centered two-electron integrals...


Time taken for two-centered two-electron integrals 0.0769166424870491 seconds.



Performing Schwarz screening...
Threshold  1e-09
Time taken to evaluate the "diagonal" of 4c2e ERI tensor:  0.027388593181967735
Time taken to evaluate the square roots needed:  0.0004981476813554764
Time for significant indices evaluation:  0.14858961291611195
Size of permanent array storing the significant indices of 3c2e ERI in GB  0.003127328
No. of elements in the standard three-centered two electron ERI tensor:  448412400
No. of elements in the triangular three-centered two electron ERI tensor:  224645820
No. of significant triplets based on Schwarz inequality and triangularity: 84415084 or 18.8% of original
Schwarz screening done!
Total time taken for Schwarz screening 0.17662360705435276 seconds.

Two Center Two electron ERI size in GB  0.023777408
Three Center Two electron ERI size in GB  0.675320672
Three-centered two electron evaluation done!
Time taken for Cholesky factorization fo two-centered two-electron integrals 0.0432501882314682 seconds.

Time taken for Coulomb term related calculations (integrals, screening, prelims..) with the density fitting approximation  2.7063696570694447 seconds.


Using the user supplied grids!



No. of supplied/generated grid points:  1497824
Size (in GB) for storing the coordinates of grid:       0.035947776
Size (in GB) for storing the weights of grid:           0.011982592
Size (in GB) for storing the density at gridpoints:     0.011982592

Will use batching to evaluate the XC term for memory efficiency.
Batch size:  51200
No. of batches:  30

Preliminary processing for XC term evaluations...
Calculating the value of basis functions (atomic orbitals) and get the indices of siginificantly contributing functions...
done!
Time taken 0.06772404164075851 seconds.

Maximum no. of basis functions contributing to a batch of grid points:    190
Average no. of basis functions contributing to a batch of grid points:    152


------------------------------------------------------
Exchange-Correlation Functional
------------------------------------------------------

XC Functional IDs supplied:  [1, 7]


Description of exchange functional: 

The Exchange function belongs to the family: LDA
Functional ID: 1
Functional Name: lda_x
Attributes:
    Name: Slater exchange
    Kind: 0
  Family: 1
Citations:
   P. A. M. Dirac.,  Math. Proc. Cambridge Philos. Soc. 26, 376 (1930)
   F. Bloch.,  Z. Phys. 57, 545 (1929)


Description of correlation functional: 

 The Correlation function belongs to the family: LDA
Functional ID: 7
Functional Name: lda_c_vwn
Attributes:
    Name: Vosko, Wilk & Nusair (VWN5)
    Kind: 1
  Family: 1
Citations:
   S. H. Vosko, L. Wilk, and M. Nusair.,  Can. J. Phys. 58, 1200 (1980)
------------------------------------------------------




Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.66408



------Iteration 1--------


Energies
Electron-Nuclear Energy       -4566.861181447173
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                787.3879892398967
Coulomb Energy                1733.7281888619652
Exchange-Correlation Energy   -115.57361
-------------------------
Total Energy  -779.5647055413563
-------------------------



Energy difference :  779.5647055413563


Time taken for the previous iteration: 1.6784647013992071


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99997



------Iteration 2--------


Energies
Electron-Nuclear Energy       -4597.29197559359
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                775.6854496264743
Coulomb Energy                1778.894674066396
Exchange-Correlation Energy   -117.999466
-------------------------
Total Energy  -778.9574116407102
-------------------------



Energy difference :  0.6072939006460274


Time taken for the previous iteration: 0.4440871998667717


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998



------Iteration 3--------


Energies
Electron-Nuclear Energy       -4521.480518998162
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                753.7356775164146
Coulomb Energy                1721.441687667878
Exchange-Correlation Energy   -113.886635
-------------------------
Total Energy  -778.4358824381368
-------------------------



Energy difference :  0.521529202573447


Time taken for the previous iteration: 0.44184801541268826


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99997



------Iteration 4--------


Energies
Electron-Nuclear Energy       -4568.67021570493
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.8519330879801
Coulomb Energy                1755.8976563979447
Exchange-Correlation Energy   -116.28707
-------------------------
Total Energy  -779.4537912446406
-------------------------



Energy difference :  1.0179088065037831


Time taken for the previous iteration: 0.44217083416879177


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998



------Iteration 5--------


Energies
Electron-Nuclear Energy       -4567.956111998293
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.6639450797405
Coulomb Energy                1755.3482934902372
Exchange-Correlation Energy   -116.26467
-------------------------
Total Energy  -779.454638551606
-------------------------



Energy difference :  0.0008473069653973653


Time taken for the previous iteration: 0.4419061318039894


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998



------Iteration 6--------


Energies
Electron-Nuclear Energy       -4567.866191437528
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.6222197729492
Coulomb Energy                1755.2943805380987
Exchange-Correlation Energy   -116.25916
-------------------------
Total Energy  -779.4548478269194
-------------------------



Energy difference :  0.00020927531340930727

Switching to double precision for XC evaluation after 6 iterations!


Time taken for the previous iteration: 0.46644012443721294


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998171710223



------Iteration 7--------


Energies
Electron-Nuclear Energy       -4567.820032511103
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.6022555895879
Coulomb Energy                1755.2652659888574
Exchange-Correlation Energy   -116.25625101877198
-------------------------
Total Energy  -779.4548557490368
-------------------------



Energy difference :  7.922117447378696e-06


Time taken for the previous iteration: 0.45824102126061916


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998171573316



------Iteration 8--------


Energies
Electron-Nuclear Energy       -4567.816065255758
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.6010435420992
Coulomb Energy                1755.2622702986816
Exchange-Correlation Energy   -116.25601085016807
-------------------------
Total Energy  -779.4548560627529
-------------------------



Energy difference :  3.137161002086941e-07


Time taken for the previous iteration: 0.44748600386083126


Calculating XC term using GPU and algo 3
Not using LibXC for XC evaluations
Number of electrons:  161.99998171556675



------Iteration 9--------


Energies
Electron-Nuclear Energy       -4567.815485577217
Nuclear repulsion Energy      1381.7539062023925
Kinetic Energy                767.6009100453655
Coulomb Energy                1755.2617814971923
Exchange-Correlation Energy   -116.25596831894617
-------------------------
Total Energy  -779.4548561512133
-------------------------



Energy difference :  8.846041055221576e-08


Time taken for the previous iteration: 0.4472191594541073



SCF Converged after 9 iterations!

-------------------------------------
Total Energy =  -779.4548561512133
-------------------------------------



Time taken : 8.382352406159043 seconds.



-------------------------------------
Profiling
-------------------------------------
Preprocessing                           0.06772404164075851
Density Fitting                         2.897634780034423
    DF (gamma)                          1.124864162877202
    DF (coeff)                          0.04910726100206375
    DF (Jtri)                           1.65487602353096
    DF (Cholesky)                       0.0432501882314682
DIIS                                    0.3818240240216255
KS matrix diagonalization               0.1947231199592352
One electron Integrals (S, T, Vnuc)     0.31270615942776203
Coulomb Integrals (2c2e + 3c2e)         2.6631194688379765
Grids construction                      0
Exchange-Correlation Term               1.7901222053915262
Misc.                                   0.0744986068457365
Complete SCF                            8.382352406159043
Energy diff (PySCF-CrysX) 0.41410505626322447


PyFock Dipole moment
Dipole moment(X, Y, Z, A.U.): -9.01850329138032e-09 2.4286686827650408e-08 4.556837079268187e-08
Max Diff dipole moment (PySCF-CrysX) 4.556843762810795e-08



 Package versions
pyscf version 2.4.0
np version 1.26.3
joblib version 1.3.2
numba version 0.59.0
threadpoolctl version 3.2.0
opt_einsum version v3.3.0
llvmlite version 0.42.0
cupy version 13.0.0
numexpr version 2.9.0
scipy version 1.10.1
